immich:
  # Environment variables for Immich
  env:
    REDIS_HOSTNAME: '{{ printf "%s-redis-master" .Release.Name }}'
    # DB_HOSTNAME: "{{ .Release.Name }}-postgres-rw.immich.svc.cluster.local"
    DB_HOSTNAME: "immich-postgres-rw.immich.svc.cluster.local"
    DB_USERNAME: "{{ .Values.postgresql.global.postgresql.auth.username }}"
    DB_DATABASE_NAME: "{{ .Values.postgresql.global.postgresql.auth.database }}"
    DB_PASSWORD: "{{ .Values.postgresql.global.postgresql.auth.password }}"
    IMMICH_MACHINE_LEARNING_URL: '{{ printf "http://%s-machine-learning:3003" .Release.Name }}'
  
  # Immich images
  # image:
  #   tag: v1.139.4

  # Immich persistence
  immich:
    metrics:
      enabled: false
    persistence:
      library:
        existingClaim: immich-library-pvc
    configuration: {}

  # Redis (Helm-managed)
  redis:
    enabled: true
    architecture: standalone
    auth:
      enabled: false

  # Immich server
  server:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-server
      pullPolicy: IfNotPresent
    ingress:
      main:
        enabled: true
        ingressClassName: tailscale
        hosts:
          - host: immich
            paths:
              - path: "/"
                pathType: Prefix
        tls: []
        # annotations:
        #   traefik.ingress.kubernetes.io/router.entrypoints: websecure
        #   traefik.ingress.kubernetes.io/service.serversscheme: https
        #   traefik.ingress.kubernetes.io/service.nativelb: "true"
        #   traefik.ingress.kubernetes.io/service.sticky.cookie: "true"
        # hosts:
        #   - host: immich.kube
        #     paths:
        #       - path: "/"
        # tls: []

  # Machine learning service
  machine-learning:
    enabled: true
    image:
      repository: ghcr.io/immich-app/immich-machine-learning
      pullPolicy: IfNotPresent
    env:
      TRANSFORMERS_CACHE: /cache
    persistence:
      cache:
        enabled: true
        size: 10Gi
        existingClaim: immich-ml-pvc
